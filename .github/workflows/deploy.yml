name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  My-Deploy-Job:
    runs-on: ubuntu-latest

    steps:
      - name: Github Repository에 올린 파일들을 불러오기
        uses: actions/checkout@v4

      - name: JDK 17버전 설치
        uses: actions/setup-java@v4
        with:
          #jdk중에서도 어떤 브랜드를 쓸건지
          distribution: temurin
          java-version: 17

      - name: application.yml 파일 만들기
        run: |
          #mkdir ./src/main/resources/
          echo "${{ secrets.APPLICATION_DEV }}" > ./src/main/resources/application_dev.yml
          echo "${{ secrets.APPLICATION_JPA }}" > ./src/main/resources/application_jap.yml
          echo "${{ secrets.APPLICATION_OAUTH }}" > ./src/main/resources/applicastion_oauth.yml

      - name: 테스트 및 빌드하기
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: ECR에 로그인하기
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker 이미지 생성
        run: docker build --no-cache -t hello-world-server .

      - name: Docker 이미지에 Tag 붙이기
        run: docker tag hello-world-server ${{ steps.login-ecr.outputs.registry }}/hello-world-server:${{ github.sha }}


      - name: ECR에 Docker 이미지 Push하기
        run: docker push ${{ steps.login-ecr.outputs.registry }}/hello-world-server:${{ github.sha }}


      - name: 압축하기
        run: tar -czvf $GITHUB_SHA.tar.gz appspec.yml scripts

      - name: S3에 프로젝트 폴더 업로드하기
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://hello-world-server/$GITHUB_SHA.tar.gz

      - name: Code Deploy를 활용해 EC2에 프로젝트 코드 배포
        run: aws deploy create-deployment
            --application-name hello-world-server
            --deployment-config-name CodeDeployDefault.AllAtOnce
            --deployment-group-name Production
            --s3-location bucket=hello-world-server,bundleType=tgz,key=$GITHUB_SHA.tar.gz
